{
    "docs": [
        {
            "location": "/", 
            "text": "isotope-ui\n\n\nHTML-configurable boolean filter UIs using \nIsotope\n\n\nRequires:\n\n JQuery (http://jquery.com/)\n\n Isotope (http://isotope.metafizzy.co/)\n\n\nGetting Started\n\n\nCopy isotope-ui.js into your project and link it, after linking the above two libraries previously in the script load order.\n\n\nLike so ~\n\n\nscript src=\n//code.jquery.com/jquery-2.2.3.min.js\n/script\n\n\nscript src=\n//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.2.2/isotope.pkgd.min.js\n/script\n\n\nscript src=\nisotope-ui.js\n/script\n \n!-- this is it, THIS. IS. IT. --\n\n\n\n\n\nExample\n\n\nA simple example using a single UI group;\n\n\nh3\nSingle select container\n/h3\n\n\ndiv class=\nb-filter-ui-container\n\n    \na class=\nb-button b-filter\n data-filter=\nthing\nthing\n/a\n\n    \na class=\nb-button b-filter\n data-filter=\npotato\npotato\n/a\n\n    \na class=\nb-button b-filter\n data-filter=\ncar\ncar\n/a\n\n\n/div\n\n\n\n\n\nBuilding Stuff\n\n\nA detailed usage guide is available in the next section, \nUsing isotope-ui", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#isotope-ui", 
            "text": "HTML-configurable boolean filter UIs using  Isotope  Requires:  JQuery (http://jquery.com/)  Isotope (http://isotope.metafizzy.co/)", 
            "title": "isotope-ui"
        }, 
        {
            "location": "/#getting-started", 
            "text": "Copy isotope-ui.js into your project and link it, after linking the above two libraries previously in the script load order.  Like so ~  script src= //code.jquery.com/jquery-2.2.3.min.js /script  script src= //cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.2.2/isotope.pkgd.min.js /script  script src= isotope-ui.js /script   !-- this is it, THIS. IS. IT. --", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#example", 
            "text": "A simple example using a single UI group;  h3 Single select container /h3  div class= b-filter-ui-container \n     a class= b-button b-filter  data-filter= thing thing /a \n     a class= b-button b-filter  data-filter= potato potato /a \n     a class= b-button b-filter  data-filter= car car /a  /div", 
            "title": "Example"
        }, 
        {
            "location": "/#building-stuff", 
            "text": "A detailed usage guide is available in the next section,  Using isotope-ui", 
            "title": "Building Stuff"
        }, 
        {
            "location": "/ui/", 
            "text": "Overview\n\n\nWhat is this?\n\n\nIt's a thing meant to add generic, extensible UI creation on top of \nIsotope\n, which is another thing.  It primarily shines when used to create compound boolean filters.\n\n\nFeatures\n\n\n\n\nBehavior fully configurable from HTML\n\n\n2-way data binds filter state between the UI and URL search string\n\n\nSupports boolean filtering\n\n\n\n\nBuilding a Filter UI\n\n\nThe structure and behavior of the filter UI is entirely configurable by classing HTML elements.\n\n\nExample\n\n\nFor example the following code will create a filter group that has multi-select enabled, with a default value that also clears all other selected filters within that group:\n\n\ndiv class=\nb-filter-ui\n\n    \ndiv class=\nb-filter-ui-container js-multi\n\n        \na class=\nb-filter js-default js-clear\n data-filter=\n*\nAll\n/a\n\n        \na class=\nb-filter\n data-filter=\nman\nMan\n/a\n\n        \na class=\nb-filter\n data-filter=\ndog\nDog\n/a\n\n        \na class=\nb-filter\n data-filter=\nbear\nBear\n/a\n\n    \n/div\n\n\n/div\n\n\n\n\n\nThe base filter UI is specified by \nb-filter-ui\n; all UI groups and components should be wrapped inside this element.\n\n\nb-filter-ui-container\n defines a UI group, which can then have additional options specified. In the example \njs-multi\n is an option used to configure the group as a multi-select, which will enable multiple filters to be selected within the group and all added to the filter string. In contrast, the default behavior for a group is a single select, where only one filter may be selected at a time.\n\n\nb-filter\n specifies an individual filter UI component.  These might be something like buttons (as in the above example), or a \nselect\n element, etc.  The options \njs-default\n and \njs-clear\n cause that filter to be selected automatically at load time, and clear any selected filters within the multi-select group, respectively.\n\n\ndata-filter\n specifies the actual filter to add to the filter string.  Unadorned single words without any css selector syntax characters will be treated as single classes to filter on (e.g. \nbear\n becomes \n.bear\n in the filter string). More complex css selectors are also supported, and these will be left pristine as written. A value consisting of only one or more \n*\n characters will be ignored and not included in the filter string.\n\n\nAll of the classnames used to configure the UI behavior can be customized \nin the js file\n\n\nUI Classes\n\n\n\n\n\n\n\n\nDefault Classname\n\n\nBehavior\n\n\n\n\n\n\n\n\n\n\nb-filter-ui\n\n\nDefines the base UI\n\n\n\n\n\n\nb-filter-ui-container\n\n\nDefines a UI group which can have additional options specified\n\n\n\n\n\n\nb-filter\n\n\nDefines a filter UI component\n\n\n\n\n\n\nb-isotope\n\n\nDefines the results area\n\n\n\n\n\n\nb-result\n\n\nDefines a specific result that isotope can filter\n\n\n\n\n\n\njs-and\n\n\nConfigures AND boolean filtering; used on \nb-filter-ui\n element.  This is the default behavior if nothing is specified.\n\n\n\n\n\n\njs-or\n\n\nConfigures OR boolean filtering; used on \nb-filter-ui\n element\n\n\n\n\n\n\njs-multi\n\n\nConfigures a \nb-filer-ui-container\n as a multi-select group\n\n\n\n\n\n\njs-default\n\n\nb-filter\n will be selected automatically when page is loaded\n\n\n\n\n\n\njs-clear\n\n\nb-filter\n will clear other filters within group when selected\n\n\n\n\n\n\njs-clear-all\n\n\nb-filter\n will clear other filters within entire UI when selected\n\n\n\n\n\n\njs-click\n\n\nBinds updating filter string to \nclick\n event on the \nb-filter\n. This is the default behavior.\n\n\n\n\n\n\njs-change\n\n\nBinds updating filter string to \nchange\n event on the \nb-filter\n\n\n\n\n\n\njs-pre-filter\n\n\nUsed on \nb-isotope\n to set a default state for the results to be filtered to instead of \n*\n. This will be overridden as soon as any UI interactions are performed.  This also bypasses any binding on page load from URL if a search string is present.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDefault Attribute\n\n\nBehavior\n\n\n\n\n\n\n\n\n\n\ndata-filter\n\n\nSpecifies filter parameter used by the element. Currently, these must all be unique in order for the data binding to work correctly.\n\n\n\n\n\n\n\n\nFull Usage Example\n\n\n!DOCTYPE html\n\n\nhtml lang=\nen\n\n\nhead\ntitle\nisotope-ui UI Example\n/title\n/head\n\n\nbody\n\n    \nstyle type=\ntext/css\n\n    .b-card {\n        background-color: #efe;\n        width: 100px;\n        height: 100px;\n        display: inline-block;\n        margin: 5px;\n    }\n    .b-filter:not(.js-change).m-active {\n        background-color: #faa;\n    }\n    .b-filter-ui {\n        background-color: #fee;\n    }\n\n/style\n\n\n\ndiv class=\nb-filter-ui js-and\n\n    \nh2\nExample Filter UI\n/h2\n\n    \nselect id=\nandor\n\n        \noption value=\nand\nAND\n/option\n\n        \noption value=\nor\nOR\n/option\n\n    \n/select\n\n    \nh3\nMulti select container\n/h3\n\n    \ndiv class=\nb-filter-ui-container js-multi\n\n        \na class=\nb-button b-filter js-default js-clear-all\n data-filter=\n*\nall\n/a\n\n        \na class=\nb-button b-filter\n data-filter=\nman\nman\n/a\n\n        \na class=\nb-button b-filter\n data-filter=\ndog\ndog\n/a\n\n        \na class=\nb-button b-filter\n data-filter=\nbear\nbear\n/a\n\n    \n/div\n\n    \nh3\nSingle select container\n/h3\n\n    \ndiv class=\nb-filter-ui-container\n\n        \na class=\nb-button b-filter\n data-filter=\nthing\nthing\n/a\n\n        \na class=\nb-button b-filter\n data-filter=\npotato\npotato\n/a\n\n        \na class=\nb-button b-filter\n data-filter=\ncar\ncar\n/a\n\n    \n/div\n\n    \nh3\nNo container\n/h3\n\n    \na class=\nb-button b-filter\n data-filter=\ncreature\ncreature\n/a\n\n    \na class=\nb-button b-filter\n data-filter=\nalien\nalien\n/a\n\n    \na class=\nb-button b-filter\n data-filter=\npublic-prosecutor\npublic prosecutor\n/a\n\n    \nh3\nOn change\n/h3\n\n    \nselect class=\nb-filter js-change\n\n        \noption data-filter=\n* *\n* *\n/option\n\n        \noption data-filter=\nyo\nyo\n/option\n\n        \noption data-filter=\nhey\nhey\n/option\n\n        \noption data-filter=\npancake\npancake\n/option\n\n        \noption data-filter=\nsquid\nsquid\n/option\n\n    \n/select\n\n\n/div\n\n\ndiv class=\nb-isotope\n data-filter=\nman\n\n    \ndiv class=\nb-card b-result yo man creature\nyo man creature\n/div\n\n    \ndiv class=\nb-card b-result yo dog\nyo dog\n/div\n\n    \ndiv class=\nb-card b-result hey man alien\nhey man alien\n/div\n\n    \ndiv class=\nb-card b-result hey dog\nhey dog\n/div\n\n    \ndiv class=\nb-card b-result hey dog potato\nhey dog potato\n/div\n\n    \ndiv class=\nb-card b-result hey potato thing\nhey potato thing\n/div\n\n    \ndiv class=\nb-card b-result hey man alien pancake\nhey man alien pancake\n/div\n\n    \ndiv class=\nb-card b-result hey dog squid\nhey dog squid\n/div\n\n    \ndiv class=\nb-card b-result yo pancake alien creature\nyo pancake alien creature\n/div\n\n    \ndiv class=\nb-card b-result yo alien public-prosecutor\nyo alien public prosecutor\n/div\n\n    \ndiv class=\nb-card b-result hey squid car creature\nhey squid car creature\n/div\n\n    \ndiv class=\nb-card b-result alien potato bear\nalien potato bear\n/div\n\n\n/div\n\n\nscript src=\n//code.jquery.com/jquery-2.2.3.min.js\n/script\n\n\nscript src=\n//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.2.2/isotope.pkgd.min.js\n/script\n\n\nscript src=\nisotope-ui.js\n/script\n\n\nscript\n\n$(function() {\n    $('#andor').on('change', function() {\n        if ($(this).val() === 'and') {\n            $(this).closest('.b-filter-ui').removeClass('js-or');\n            $(this).closest('.b-filter-ui').addClass('js-and');\n        } else {\n            $(this).closest('.b-filter-ui').removeClass('js-and');\n            $(this).closest('.b-filter-ui').addClass('js-or');\n        }\n    });\n});\n\n/script\n\n\n/body\n\n\n/html\n\n\n\n\n\nFurther Configuration\n\n\nIt is possible to further customize the configuration by editing options within \nisotope-ui.js\n. Available options are at the top of the js file as follows:\n\n\nvar jsBindings = {\ngrid            : '.b-isotope',     // selector to bind the isotope grid to\nuiBase          : '.b-filter-ui',   // selector to bind the parent element of all containers / ui elements on page\nuiContainer     : '.b-filter-ui-container', // selector for ui container elements\nui              : '.b-filter, .b-filter option' // selector to bind the ui element(s) to\n},\n\njsOptions = {\n\n// for ui base\nand             : 'js-and',         // sets boolean filtering mode to AND\nor              : 'js-or',          // sets boolean filtering mode to OR\n\n// for ui containers\nmultiSelect     : 'js-multi',       // multiple select option, otherwise defaults to single select\n\n// for ui elements\nclick           : 'js-click',       // binds filter behavior to click event\nchange          : 'js-change',      // binds filter behavior to change event\nclearFilters    : 'js-clear',       // clears other filters when this filter is selected (useful for multi select)\nclearAllFilters : 'js-clear-all',   // clears all filters in uiBase when this filter is selected\ndefaultFilter   : 'js-default',     // default filter to select on page load\nselectedClass   : 'm-active',       // class to toggle on ui control if selected (added automatically)\n\n// for grid element\npreFilter       : 'js-pre-filter',  // sets results to pre-filter on page load (ignores location.search)\n\n// etc\nfilterOn        : 'data-filter'     // attribute name to be used for determining filter string(s)\n\n},\n\nisotopeDefaults = {\nitemSelector    : '.b-result',\nlayoutMode      : 'fitRows',\nsortBy          : 'category'\n},\n\nsearchKey   = 'filter';     // location.search key name to be used for url-based filtering\n\n\n\n\nThe values of any of these options can be modified.  They are grouped into the following categories:\n\n\n\n\n\n\n\n\nName\n\n\nPurpose\n\n\n\n\n\n\n\n\n\n\njsBindings\n\n\nDefines the css classes to bind the various UI components to\n\n\n\n\n\n\njsOptions\n\n\nDefines css class names to use to toggle the HTML configurable options on the UI components\n\n\n\n\n\n\nisotopeDefaults\n\n\nConfiguration options for Isotope. See isotope.metafizzy.co for documentation.\n\n\n\n\n\n\nsearchKey\n\n\nspecifies the name of the key appearing after \n?\n in the browser search string that will be used for data binding.\n\n\n\n\n\n\n\n\nURL Data Binding\n\n\nisotope-ui features 2-way data binding to the URL search string, which enables filter states to be preserved and linked.  Only the key specified by \nsearchKey\n in the options is modified, while any other keys present in the URL search string will be left pristine and will not affect the data binding.\n\n\nThe UI can be set to either treat multiple selected values across UI groups as boolean AND or OR searches. In the case of AND, a filter string will be bound in a pattern such as \n.filter1.filter2.filter3\n, while OR will bind a string in the pattern \n.filter1,.filter2,.filter3\n which can then be filtered on directly by isotope. The default is AND.", 
            "title": "Using isotope-ui"
        }, 
        {
            "location": "/ui/#overview", 
            "text": "", 
            "title": "Overview"
        }, 
        {
            "location": "/ui/#what-is-this", 
            "text": "It's a thing meant to add generic, extensible UI creation on top of  Isotope , which is another thing.  It primarily shines when used to create compound boolean filters.", 
            "title": "What is this?"
        }, 
        {
            "location": "/ui/#features", 
            "text": "Behavior fully configurable from HTML  2-way data binds filter state between the UI and URL search string  Supports boolean filtering", 
            "title": "Features"
        }, 
        {
            "location": "/ui/#building-a-filter-ui", 
            "text": "The structure and behavior of the filter UI is entirely configurable by classing HTML elements.", 
            "title": "Building a Filter UI"
        }, 
        {
            "location": "/ui/#example", 
            "text": "For example the following code will create a filter group that has multi-select enabled, with a default value that also clears all other selected filters within that group:  div class= b-filter-ui \n     div class= b-filter-ui-container js-multi \n         a class= b-filter js-default js-clear  data-filter= * All /a \n         a class= b-filter  data-filter= man Man /a \n         a class= b-filter  data-filter= dog Dog /a \n         a class= b-filter  data-filter= bear Bear /a \n     /div  /div   The base filter UI is specified by  b-filter-ui ; all UI groups and components should be wrapped inside this element.  b-filter-ui-container  defines a UI group, which can then have additional options specified. In the example  js-multi  is an option used to configure the group as a multi-select, which will enable multiple filters to be selected within the group and all added to the filter string. In contrast, the default behavior for a group is a single select, where only one filter may be selected at a time.  b-filter  specifies an individual filter UI component.  These might be something like buttons (as in the above example), or a  select  element, etc.  The options  js-default  and  js-clear  cause that filter to be selected automatically at load time, and clear any selected filters within the multi-select group, respectively.  data-filter  specifies the actual filter to add to the filter string.  Unadorned single words without any css selector syntax characters will be treated as single classes to filter on (e.g.  bear  becomes  .bear  in the filter string). More complex css selectors are also supported, and these will be left pristine as written. A value consisting of only one or more  *  characters will be ignored and not included in the filter string.  All of the classnames used to configure the UI behavior can be customized  in the js file", 
            "title": "Example"
        }, 
        {
            "location": "/ui/#ui-classes", 
            "text": "Default Classname  Behavior      b-filter-ui  Defines the base UI    b-filter-ui-container  Defines a UI group which can have additional options specified    b-filter  Defines a filter UI component    b-isotope  Defines the results area    b-result  Defines a specific result that isotope can filter    js-and  Configures AND boolean filtering; used on  b-filter-ui  element.  This is the default behavior if nothing is specified.    js-or  Configures OR boolean filtering; used on  b-filter-ui  element    js-multi  Configures a  b-filer-ui-container  as a multi-select group    js-default  b-filter  will be selected automatically when page is loaded    js-clear  b-filter  will clear other filters within group when selected    js-clear-all  b-filter  will clear other filters within entire UI when selected    js-click  Binds updating filter string to  click  event on the  b-filter . This is the default behavior.    js-change  Binds updating filter string to  change  event on the  b-filter    js-pre-filter  Used on  b-isotope  to set a default state for the results to be filtered to instead of  * . This will be overridden as soon as any UI interactions are performed.  This also bypasses any binding on page load from URL if a search string is present.        Default Attribute  Behavior      data-filter  Specifies filter parameter used by the element. Currently, these must all be unique in order for the data binding to work correctly.", 
            "title": "UI Classes"
        }, 
        {
            "location": "/ui/#full-usage-example", 
            "text": "!DOCTYPE html  html lang= en  head title isotope-ui UI Example /title /head  body \n     style type= text/css \n    .b-card {\n        background-color: #efe;\n        width: 100px;\n        height: 100px;\n        display: inline-block;\n        margin: 5px;\n    }\n    .b-filter:not(.js-change).m-active {\n        background-color: #faa;\n    }\n    .b-filter-ui {\n        background-color: #fee;\n    } /style  div class= b-filter-ui js-and \n     h2 Example Filter UI /h2 \n     select id= andor \n         option value= and AND /option \n         option value= or OR /option \n     /select \n     h3 Multi select container /h3 \n     div class= b-filter-ui-container js-multi \n         a class= b-button b-filter js-default js-clear-all  data-filter= * all /a \n         a class= b-button b-filter  data-filter= man man /a \n         a class= b-button b-filter  data-filter= dog dog /a \n         a class= b-button b-filter  data-filter= bear bear /a \n     /div \n     h3 Single select container /h3 \n     div class= b-filter-ui-container \n         a class= b-button b-filter  data-filter= thing thing /a \n         a class= b-button b-filter  data-filter= potato potato /a \n         a class= b-button b-filter  data-filter= car car /a \n     /div \n     h3 No container /h3 \n     a class= b-button b-filter  data-filter= creature creature /a \n     a class= b-button b-filter  data-filter= alien alien /a \n     a class= b-button b-filter  data-filter= public-prosecutor public prosecutor /a \n     h3 On change /h3 \n     select class= b-filter js-change \n         option data-filter= * * * * /option \n         option data-filter= yo yo /option \n         option data-filter= hey hey /option \n         option data-filter= pancake pancake /option \n         option data-filter= squid squid /option \n     /select  /div  div class= b-isotope  data-filter= man \n     div class= b-card b-result yo man creature yo man creature /div \n     div class= b-card b-result yo dog yo dog /div \n     div class= b-card b-result hey man alien hey man alien /div \n     div class= b-card b-result hey dog hey dog /div \n     div class= b-card b-result hey dog potato hey dog potato /div \n     div class= b-card b-result hey potato thing hey potato thing /div \n     div class= b-card b-result hey man alien pancake hey man alien pancake /div \n     div class= b-card b-result hey dog squid hey dog squid /div \n     div class= b-card b-result yo pancake alien creature yo pancake alien creature /div \n     div class= b-card b-result yo alien public-prosecutor yo alien public prosecutor /div \n     div class= b-card b-result hey squid car creature hey squid car creature /div \n     div class= b-card b-result alien potato bear alien potato bear /div  /div  script src= //code.jquery.com/jquery-2.2.3.min.js /script  script src= //cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.2.2/isotope.pkgd.min.js /script  script src= isotope-ui.js /script  script \n$(function() {\n    $('#andor').on('change', function() {\n        if ($(this).val() === 'and') {\n            $(this).closest('.b-filter-ui').removeClass('js-or');\n            $(this).closest('.b-filter-ui').addClass('js-and');\n        } else {\n            $(this).closest('.b-filter-ui').removeClass('js-and');\n            $(this).closest('.b-filter-ui').addClass('js-or');\n        }\n    });\n}); /script  /body  /html", 
            "title": "Full Usage Example"
        }, 
        {
            "location": "/ui/#further-configuration", 
            "text": "It is possible to further customize the configuration by editing options within  isotope-ui.js . Available options are at the top of the js file as follows:  var jsBindings = {\ngrid            : '.b-isotope',     // selector to bind the isotope grid to\nuiBase          : '.b-filter-ui',   // selector to bind the parent element of all containers / ui elements on page\nuiContainer     : '.b-filter-ui-container', // selector for ui container elements\nui              : '.b-filter, .b-filter option' // selector to bind the ui element(s) to\n},\n\njsOptions = {\n\n// for ui base\nand             : 'js-and',         // sets boolean filtering mode to AND\nor              : 'js-or',          // sets boolean filtering mode to OR\n\n// for ui containers\nmultiSelect     : 'js-multi',       // multiple select option, otherwise defaults to single select\n\n// for ui elements\nclick           : 'js-click',       // binds filter behavior to click event\nchange          : 'js-change',      // binds filter behavior to change event\nclearFilters    : 'js-clear',       // clears other filters when this filter is selected (useful for multi select)\nclearAllFilters : 'js-clear-all',   // clears all filters in uiBase when this filter is selected\ndefaultFilter   : 'js-default',     // default filter to select on page load\nselectedClass   : 'm-active',       // class to toggle on ui control if selected (added automatically)\n\n// for grid element\npreFilter       : 'js-pre-filter',  // sets results to pre-filter on page load (ignores location.search)\n\n// etc\nfilterOn        : 'data-filter'     // attribute name to be used for determining filter string(s)\n\n},\n\nisotopeDefaults = {\nitemSelector    : '.b-result',\nlayoutMode      : 'fitRows',\nsortBy          : 'category'\n},\n\nsearchKey   = 'filter';     // location.search key name to be used for url-based filtering  The values of any of these options can be modified.  They are grouped into the following categories:     Name  Purpose      jsBindings  Defines the css classes to bind the various UI components to    jsOptions  Defines css class names to use to toggle the HTML configurable options on the UI components    isotopeDefaults  Configuration options for Isotope. See isotope.metafizzy.co for documentation.    searchKey  specifies the name of the key appearing after  ?  in the browser search string that will be used for data binding.", 
            "title": "Further Configuration"
        }, 
        {
            "location": "/ui/#url-data-binding", 
            "text": "isotope-ui features 2-way data binding to the URL search string, which enables filter states to be preserved and linked.  Only the key specified by  searchKey  in the options is modified, while any other keys present in the URL search string will be left pristine and will not affect the data binding.  The UI can be set to either treat multiple selected values across UI groups as boolean AND or OR searches. In the case of AND, a filter string will be bound in a pattern such as  .filter1.filter2.filter3 , while OR will bind a string in the pattern  .filter1,.filter2,.filter3  which can then be filtered on directly by isotope. The default is AND.", 
            "title": "URL Data Binding"
        }, 
        {
            "location": "/changelog/", 
            "text": "changelog\n\n\n1.0.0\n\n\nInitial version, supports button and dropdown UI components, boolean filtering, and URL data binding.", 
            "title": "Changelog"
        }, 
        {
            "location": "/changelog/#changelog", 
            "text": "", 
            "title": "changelog"
        }, 
        {
            "location": "/changelog/#100", 
            "text": "Initial version, supports button and dropdown UI components, boolean filtering, and URL data binding.", 
            "title": "1.0.0"
        }
    ]
}